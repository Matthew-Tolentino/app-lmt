@use 'sass:math';
@import '../../styles.scss';
@import '../../shared/scss/section-title.scss';

$len: 3;

@mixin orb-gen-bp-laptop() {
  // $len: str-length(var(--strorbs));
  @for $i from 1 through $len {
    .orb-#{$i} {
      grid-area: #{$i} / 1 / #{$i + 1} / 2;
    }
  }
}

@mixin orb-gen-default() {
  @for $i from 1 through $len {
    $row: math.ceil($i / 2);
    $col: $i % 2;
    $area: 0 / 0 / 0 / 0;

    @if $col == 0 {
      $col: 2;
    }

    @if $i == $len and $i % 2 == 1{
      $area: #{$row} / #{$col} / #{$row + 1} / #{$col + 2};
    } @else {
      $area: #{$row} / #{$col} / #{$row + 1} / #{$col + 1};
    }

    .orb-#{$i} {
      grid-area: $area;
    }
  }
}

.skill-grid {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: .5fr .5fr;
  // grid-template-rows: 1fr;
  grid-template-rows: repeat(math.ceil($len / 2), 780px);
  // grid-gap: 1em;
  place-items: center;
}

.orb {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

@include orb-gen-default();

@media (max-width: $bp-desktop) {
  .skill-grid {
    grid-template-columns: 100%;
    // grid-template-rows: repeat($len , 780px);
  }
  
  @include orb-gen-bp-laptop();  
}

@media (max-width: $bp-laptop) {
  .skill-grid {
    grid-template-columns: 100%;
    grid-template-rows: repeat($len , 75vw);
  }

  // @include orb-gen-bp-laptop();
}